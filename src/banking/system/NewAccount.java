/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package banking.system;

import java.awt.Image;
import java.awt.image.BufferedImage;

import java.io.*;
import java.sql.*;
import java.util.Random;

import javax.imageio.ImageIO;
import javax.swing.*;

/**
 *
 * @author Amit
 */
public class NewAccount extends javax.swing.JPanel {
    
    String accountHolderName, day, month, year, sex, addr, emailid, marital;
    int accountno;
    Connection con;
    BufferedImage img;
    File infile, outfile;
    String filename;
    
    String path2 = "default.jpg";
    //ImageIcon iconsuccess = new ImageIcon(getClass().getResource("success.png"));

    /**
     * Creates new form NewAccount
     */
    public NewAccount() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newaccountheading = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        emailidLabel = new javax.swing.JLabel();
        sexLabel = new javax.swing.JLabel();
        maritalStatusLabel = new javax.swing.JLabel();
        accountnoLabel = new javax.swing.JLabel();
        dobLabel = new javax.swing.JLabel();
        accholderName = new javax.swing.JTextField();
        dobday = new javax.swing.JComboBox();
        dobmonth = new javax.swing.JComboBox();
        dobYear = new javax.swing.JTextField();
        sexSelect = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        address = new javax.swing.JTextArea();
        email = new javax.swing.JTextField();
        maritalstatus = new javax.swing.JComboBox();
        accno = new javax.swing.JTextField();
        autogenerate = new javax.swing.JButton();
        submit = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        imageLabel = new javax.swing.JLabel();
        imgSelect = new javax.swing.JButton();
        imgload = new javax.swing.JLabel();
        imgpath = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(900, 768));

        newaccountheading.setBackground(new java.awt.Color(0, 0, 0));
        newaccountheading.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        newaccountheading.setForeground(new java.awt.Color(255, 255, 255));
        newaccountheading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newaccountheading.setText("New Account");
        newaccountheading.setOpaque(true);

        nameLabel.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        nameLabel.setText("Account Holder Name:");

        addressLabel.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        addressLabel.setText("Address:");

        emailidLabel.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        emailidLabel.setText("Email Address:");

        sexLabel.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        sexLabel.setText("Sex:");

        maritalStatusLabel.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        maritalStatusLabel.setText("Marital Status:");

        accountnoLabel.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        accountnoLabel.setText("Account No.(5-digits):");

        dobLabel.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        dobLabel.setText("Date of Birth:");

        accholderName.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        dobday.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", " " }));
        dobday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dobdayActionPerformed(evt);
            }
        });

        dobmonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        dobYear.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        sexSelect.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));

        address.setColumns(20);
        address.setRows(5);
        address.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(address);

        maritalstatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Married", "Unmarried" }));

        autogenerate.setText("Auto Generate");
        autogenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autogenerateActionPerformed(evt);
            }
        });

        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        imageLabel.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        imageLabel.setText("Account Holder Image:");

        imgSelect.setText("Browse...");
        imgSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imgSelectActionPerformed(evt);
            }
        });

        imgload.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        imgload.setOpaque(true);

        jLabel1.setText("day");

        jLabel2.setText("month");

        jLabel3.setText("year");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(202, 202, 202)
                .addComponent(submit)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(imgSelect)
                        .addGap(18, 18, 18)
                        .addComponent(imgpath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sexSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(maritalstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(clear)
                                    .addComponent(accno, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(autogenerate))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dobday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jLabel1)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dobmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dobYear, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(jLabel3)))))
                        .addGap(0, 189, Short.MAX_VALUE)))
                .addGap(108, 108, 108))
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel)
                            .addComponent(sexLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(emailidLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                            .addComponent(maritalStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(accountnoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63)
                        .addComponent(accholderName, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dobLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imgload, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116))
            .addComponent(newaccountheading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {accountnoLabel, addressLabel, dobLabel, emailidLabel, maritalStatusLabel, nameLabel, sexLabel});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(newaccountheading, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(accholderName, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dobLabel)
                            .addComponent(dobday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dobmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dobYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sexSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sexLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(imgload, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressLabel))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(emailidLabel)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maritalStatusLabel)
                    .addComponent(maritalstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accountnoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(accno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(autogenerate))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imgSelect)
                    .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imgpath))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submit)
                    .addComponent(clear))
                .addGap(79, 79, 79))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {accountnoLabel, addressLabel, dobLabel, emailidLabel, maritalStatusLabel, nameLabel, sexLabel});

    }// </editor-fold>//GEN-END:initComponents

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        
        accountHolderName = accholderName.getText();
        day = (String) dobday.getSelectedItem();
        month = (String) dobmonth.getSelectedItem();
        year = dobYear.getText();
        sex = (String) sexSelect.getSelectedItem();
        addr = address.getText();
        emailid = email.getText();
        marital = (String) maritalstatus.getSelectedItem();
        String dat = year + "-" + month + "-" + day;
        
        if (!accno.getText().isEmpty() && !accountHolderName.isEmpty() && !year.isEmpty() && !addr.isEmpty() && !emailid.isEmpty()) {
            
            accountno = Integer.parseInt(accno.getText());
            
            try {
                con = sqlconnect.getConnection();
                if (con != null) {
                    String sql2 = "SELECT accountnumber From accounts WHERE accountnumber=?";
                    PreparedStatement ps1 = con.prepareStatement(sql2);
                    ps1.setInt(1, accountno);
                    ResultSet rs1 = ps1.executeQuery();
                    
                    if (rs1.last()) {
                        
                        JOptionPane.showMessageDialog(BankingSystem.view.firstview, "Account already Exist!", "Transaction Error", JOptionPane.ERROR_MESSAGE);
                        
                    } else {
                        
                        String sql1 = "INSERT into accounts (`accountnumber`, `accountname`,`accountdob`, `accountaddress`, `accountsex`, `accountemail`, `accountmarital`,`accountimage`)VALUES(?,?,?,?,?,?,?,?) ";
                        String sql3 = "INSERT into bank_balance(`accountno`,`balancedb`) VALUES (?,?)";
                        
                        PreparedStatement ps = con.prepareStatement(sql1);
                        ps.setInt(1, accountno);
                        ps.setString(2, accountHolderName);
                        ps.setString(3, dat);
                        ps.setString(4, addr);
                        ps.setString(5, sex);
                        ps.setString(6, emailid);
                        ps.setString(7, marital);
                        ps.setString(8, path2);
                        
                        int rs = ps.executeUpdate();
                        PreparedStatement ps2 = con.prepareStatement(sql3);
                        ps2.setInt(1, accountno);
                        ps2.setInt(2, 0);
                        int rs2 = ps2.executeUpdate();
                        if (rs != -1 && rs2 != -1) {
                            if ("default.jpg".equals(path2)) {
                                JOptionPane.showMessageDialog(BankingSystem.view.firstview, "No image Selected. Default will be used", "Image", JOptionPane.WARNING_MESSAGE);
                            } else {
                                moveimage();
                            }
                            JOptionPane.showMessageDialog(BankingSystem.view.firstview, "Congratulations! Account Created.", "Account Successful", JOptionPane.INFORMATION_MESSAGE);
                            clearfields();
                            
                        } else {
                            JOptionPane.showMessageDialog(BankingSystem.view.firstview, "Request not Completed", "Query Error", JOptionPane.ERROR_MESSAGE);
                            
                        }
                        
                    }
                    
                } else {
                    JOptionPane.showMessageDialog(BankingSystem.view.firstview, "Connection could not be Established", "Databases Error", JOptionPane.ERROR_MESSAGE);
                    
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(BankingSystem.view.firstview, "Something Wrong with databases", "Databases Error", JOptionPane.ERROR_MESSAGE);
            } finally {
                try {
                    con.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(BankingSystem.view.firstview, "Databases Not Closed", "Databases Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            
            JOptionPane.showMessageDialog(BankingSystem.view.firstview, "Please Fill in all Fields", "Fields Empty", JOptionPane.ERROR_MESSAGE);
            
        }
        

    }//GEN-LAST:event_submitActionPerformed
    
    private void clearfields() {
        accholderName.setText(" ");
        accno.setText(" ");
        dobYear.setText(" ");
        email.setText(" ");
        address.setText(" ");
        imgload.setIcon(null);
    }
    private void dobdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dobdayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dobdayActionPerformed

    private void imgSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imgSelectActionPerformed
        JFileChooser js = new JFileChooser();
        
        int val = js.showOpenDialog(BankingSystem.view.firstview);
        if (val == JFileChooser.APPROVE_OPTION) {
            infile = js.getSelectedFile();
            filename = infile.getName();
            String path = infile.getParent() + "\\" + infile.getName();
            imgpath.setText(path);
            try {
                img = ImageIO.read(infile);
                
                Image img1 = img.getScaledInstance(150, 150, Image.SCALE_AREA_AVERAGING);
                
                ImageIcon icon = new ImageIcon(img1);
                imgload.setIcon(icon);
                path2 = "/banking/system/res/" + filename;
                
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(BankingSystem.view.firstview, "Unable to find image directory", "Directory not found", JOptionPane.ERROR_MESSAGE);
            }
            
        }
        

    }//GEN-LAST:event_imgSelectActionPerformed
    
    private void moveimage() {
        
        
        try {
            File outputfile = new File("src/banking/system/res/" + filename);
            ImageIO.write(img, "jpg", outputfile);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(BankingSystem.view.firstview, ex.toString(), "Directory not found", JOptionPane.ERROR_MESSAGE);
        }
        
    }

    private void autogenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autogenerateActionPerformed
        Random random = new Random();
        int randacc = random.nextInt(99999);
        if (randacc < 10000) {
            randacc = randacc + 9999;
        }
        
        String accn = Integer.toString(randacc);
        accno.setText(accn);
    }//GEN-LAST:event_autogenerateActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        clearfields();
    }//GEN-LAST:event_clearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accholderName;
    private javax.swing.JTextField accno;
    private javax.swing.JLabel accountnoLabel;
    private javax.swing.JTextArea address;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JButton autogenerate;
    private javax.swing.JButton clear;
    private javax.swing.JLabel dobLabel;
    private javax.swing.JTextField dobYear;
    private javax.swing.JComboBox dobday;
    private javax.swing.JComboBox dobmonth;
    private javax.swing.JTextField email;
    private javax.swing.JLabel emailidLabel;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JButton imgSelect;
    private javax.swing.JLabel imgload;
    private javax.swing.JLabel imgpath;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel maritalStatusLabel;
    private javax.swing.JComboBox maritalstatus;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel newaccountheading;
    private javax.swing.JLabel sexLabel;
    private javax.swing.JComboBox sexSelect;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
}
